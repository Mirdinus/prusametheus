name: Go
on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.4'
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
    - name: Build binaries
      env:
        CGO_ENABLED: 0
      run: |
        GOOS=linux GOARCH=amd64 go build -o bin/prusametheus-linux-amd64 -v .
        GOOS=linux GOARCH=arm64 go build -o bin/prusametheus-linux-arm64 -v .
        GOOS=linux GOARCH=arm GOARM=7 go build -o bin/prusametheus-linux-arm -v .
        GOOS=darwin GOARCH=amd64 go build -o bin/prusametheus-darwin-amd64 -v .
        GOOS=darwin GOARCH=arm64 go build -o bin/prusametheus-darwin-arm64 -v .
        GOOS=windows GOARCH=amd64 go build -o bin/prusametheus-windows-amd64.exe -v .
    - name: Generate SHA256 checksums
      run: |
        cd bin
        sha256sum * > SHA256SUMS
        cd ..
    - name: Upload binaries as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: bin/*
    - name: Create Tag and Release
      if: github.ref == 'refs/heads/main'
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=$(date +%Y%m%d%H%M%S)
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag $VERSION
        git push origin $VERSION
        gh release create $VERSION \
          --title "Release $VERSION" \
          --notes "Automated release $VERSION" \
          --draft=false \
          --prerelease=false
        echo "release_id=$VERSION" >> $GITHUB_OUTPUT
    - name: Upload Release Assets
      if: github.ref == 'refs/heads/main'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        for file in bin/*; do
          gh release upload ${{ steps.create_release.outputs.release_id }} "$file"
        done